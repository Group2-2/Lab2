package client.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import client.controller.*;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 * Created by SviatoslavHavrilo on 23.02.2018.
 */
public class GeneralChatView extends JFrame{
    protected JTextArea chatArea;
    protected JList onlineUsersList;
    protected JButton sendMessageButton;
    protected JTextArea newMassegeArea;
    protected JButton privateChatButton;
    protected ClientController controller;
    protected JPanel mainPanel;
    protected JButton addNewUserButton;
    protected DefaultListModel listModel;

    public GeneralChatView(ClientController controller, String titile) {
        super(titile);
        this.controller = controller;
        createGUI();
        ArrayList<String> arrList = controller.getOnlineUserslist();
        setOnlineUsersList(arrList);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.pack();
        this.setVisible(true);
    }

    public GeneralChatView(String titile) {
        super(titile);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void createGUI() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(6, 9, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-3747873));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, new GridConstraints(1, 2, 2, 6, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        chatArea = new JTextArea();
        chatArea.setEditable(false);
        chatArea.setEnabled(true);
        chatArea.setLineWrap(false);
        chatArea.setMinimumSize(new Dimension(50, 50));
        chatArea.setPreferredSize(new Dimension(50, 300));
        chatArea.setText("");
        chatArea.setWrapStyleWord(true);
        scrollPane1.setViewportView(chatArea);
        newMassegeArea = new JTextArea();
        newMassegeArea.setLineWrap(true);
        newMassegeArea.setRows(1);
        newMassegeArea.setText("");
        newMassegeArea.setWrapStyleWord(true);
        mainPanel.add(newMassegeArea, new GridConstraints(3, 2, 2, 3, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(150, 100), null, 0, false));
        privateChatButton = new JButton();
        privateChatButton.setText("Private chat");
        mainPanel.add(privateChatButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sendMessageButton = new JButton();
        sendMessageButton.setText("Send message");
        mainPanel.add(sendMessageButton, new GridConstraints(4, 6, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        onlineUsersList = new JList();
       listModel = new DefaultListModel();
        onlineUsersList.setModel(listModel);
        onlineUsersList.setToolTipText("");
        mainPanel.add(onlineUsersList, new GridConstraints(1, 1, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(150, 50), new Dimension(150, -1), 0, false));
        final JLabel label1 = new JLabel();
        label1.setText(" ");
        mainPanel.add(label1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Online");
        mainPanel.add(label2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText(" ");
        mainPanel.add(label3, new GridConstraints(1, 8, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText(" ");
        mainPanel.add(label4, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));


        this.add(mainPanel);
        setButtonListeners();

        /*UserMenu menu = new UserMenu();
        this.setJMenuBar(menu);*/
    }

    public void removeprivateChatButton (){
        mainPanel.remove(privateChatButton);
        addNewUserButton = new JButton();
        addNewUserButton.setText("Add new friend to chat");
        mainPanel.add(addNewUserButton, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));

    }

    public void setButtonListeners() {
    privateChatButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            controller.createPrivateChatSelect();
        }
    });
        sendMessageButton.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            controller.sendMessage(newMassegeArea.getText(), "GeneralChat");
            newMassegeArea.setText("");
        }
    });
}
    public void setOnlineUsersList(ArrayList<String> arrList){
        for (String userName: arrList) {
            listModel.addElement(userName);
        }
    }

    public void printNewMassage(String massage){
        chatArea.append(massage+ "\n");
    }

}
